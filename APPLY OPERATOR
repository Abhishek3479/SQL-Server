
Create table Customer (customer_id int, name varchar(20), visited_on date, amount int)

insert into Customer (customer_id, name, visited_on, amount) values ('1', 'Jhon', '2019-01-01', '100')
insert into Customer (customer_id, name, visited_on, amount) values ('2', 'Daniel', '2019-01-02', '110')
insert into Customer (customer_id, name, visited_on, amount) values ('3', 'Jade', '2019-01-03', '120')
insert into Customer (customer_id, name, visited_on, amount) values ('3', 'Jade', '2019-01-04', '150')

Create table Movies (movie_id int, title varchar(20))

insert into Movies (movie_id, title) values ('1', 'Avengers')
insert into Movies (movie_id, title) values ('2', 'Frozen 2')

/*

select * from customer c1 cross apply(select * from movies c2 where c1.customer_id=c2.movie_id) as derived_table

customer_id name                 visited_on       amount      movie_id    title               
----------- -------------------- ---------------- ----------- ----------- --------------------
          1 Jhon                       2019-01-01         100           1 Avengers            
          2 Daniel                     2019-01-02         110           2 Frozen 2   

3rd record of customer table got excluded as it not satisfies the condition
*/


/*
select * from customer c1 outer apply(select * from movies c2 where c1.customer_id=c2.movie_id) as derived_table


Output:

customer_id name                 visited_on       amount      movie_id    title               
----------- -------------------- ---------------- ----------- ----------- --------------------
          1 Jhon                       2019-01-01         100           1 Avengers            
          2 Daniel                     2019-01-02         110           2 Frozen 2            
          3 Jade                       2019-01-03         120           NULL NULL                
          3 Jade                       2019-01-04         150           NULL NULL  

3rd row of customer table not satisfies the condition so null value for right table
*/




/*
In SQL, both CROSS APPLY and OUTER APPLY are used to join a table with a table-valued function (TVF) or a derived table. However, their behavior differs when there are no matching rows.

outer query run 1st and for each row of outer query inner query(right query ) will be executed  in case of both cross apply and outer apply

Without any condition outer apply is same as inner apply , both returns same result, and they acts like a cross join.

but when we mention conditions then cross apply acts like a inner join((but cross apply result can be different from result obtained from inner join) )
and returns rows combinly from left and right query where condition met, and exclude records where condition not met

when condition is mentioned then outer apply acts like left join(but outer apply result can be different from result obtained from left join) 
and it returns all records from left table and where condition is not satisfied then it takes null for right side table .
*/


/*
without any condition both cross apply and outer apply returns same result and they acts like cross join.

select * from customer cross apply (select * from movies) as derived_table

customer_id name                 visited_on       amount      movie_id    title               
----------- -------------------- ---------------- ----------- ----------- --------------------
          1 Jhon                       2019-01-01         100           1 Avengers            
          2 Daniel                     2019-01-02         110           1 Avengers            
          3 Jade                       2019-01-03         120           1 Avengers            
          3 Jade                       2019-01-04         150           1 Avengers            
          1 Jhon                       2019-01-01         100           2 Frozen 2            
          2 Daniel                     2019-01-02         110           2 Frozen 2            
          3 Jade                       2019-01-03         120           2 Frozen 2            
          3 Jade                       2019-01-04         150           2 Frozen 2            
*/
